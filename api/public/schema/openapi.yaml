openapi: 3.0.2
info:
  title: 'Web Resource Component'
  version: V.0.1
  description: |
    API Details
    - Component: Web Resource Component
    - Reference: wrc
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/webresourcecatalogus) / [zip](https://github.com/ConductionNL/webresourcecatalogus/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/wrc-php) 
    - Datamodel: [postman](/schema/wrc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /applications:
    get:
      tags:
        - Application
      operationId: getApplicationCollection
      summary: 'Retrieves the collection of Application resources.'
      responses:
        200:
          description: 'Application collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Application
      operationId: postApplicationCollection
      summary: 'Creates a Application resource.'
      responses:
        201:
          description: 'Application resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
          links:
            GetApplicationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getApplicationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /applications/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The new Application resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/applications/{id}':
    get:
      tags:
        - Application
      operationId: getApplicationItem
      summary: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Application resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Application
      operationId: deleteApplicationItem
      summary: 'Removes the Application resource.'
      responses:
        204:
          description: 'Application resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Application
      operationId: putApplicationItem
      summary: 'Replaces the Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Application resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The updated Application resource'
    patch:
      tags:
        - Application
      operationId: patchApplicationItem
      summary: 'Updates the Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Application resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The updated Application resource'
  '/applications/{id}/{slug}':
    get:
      tags:
        - Application
      operationId: get_page_on_slugApplicationCollection
      summary: 'Retrieves the collection of Application resources.'
      responses:
        200:
          description: 'Application collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
  /footers:
    get:
      tags:
        - Footer
      operationId: getFooterCollection
      summary: 'Retrieves the collection of Footer resources.'
      responses:
        200:
          description: 'Footer collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Footer-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Footer:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Footer-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Footer-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Footer-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Footer-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Footer-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Footer-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Footer
      operationId: postFooterCollection
      summary: 'Creates a Footer resource.'
      responses:
        201:
          description: 'Footer resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Footer:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Footer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Footer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Footer-read'
          links:
            GetFooterItem:
              parameters:
                id: '$response.body#/id'
              operationId: getFooterItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /footers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Footer-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Footer:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Footer-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Footer-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Footer-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Footer-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Footer-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Footer-write'
        description: 'The new Footer resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/footers/{id}':
    get:
      tags:
        - Footer
      operationId: getFooterItem
      summary: 'Retrieves a Footer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Footer resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Footer:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Footer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Footer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Footer-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Footer
      operationId: deleteFooterItem
      summary: 'Removes the Footer resource.'
      responses:
        204:
          description: 'Footer resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Footer
      operationId: putFooterItem
      summary: 'Replaces the Footer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Footer resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Footer:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Footer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Footer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Footer-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Footer-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Footer:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Footer-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Footer-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Footer-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Footer-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Footer-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Footer-write'
        description: 'The updated Footer resource'
    patch:
      tags:
        - Footer
      operationId: patchFooterItem
      summary: 'Updates the Footer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Footer resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Footer:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Footer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Footer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Footer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Footer-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Footer-write'
        description: 'The updated Footer resource'
  /headers:
    get:
      tags:
        - Header
      operationId: getHeaderCollection
      summary: 'Retrieves the collection of Header resources.'
      responses:
        200:
          description: 'Header collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Header-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Header:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Header-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Header-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Header-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Header-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Header-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Header-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Header
      operationId: postHeaderCollection
      summary: 'Creates a Header resource.'
      responses:
        201:
          description: 'Header resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Header:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Header-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Header-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Header-read'
          links:
            GetHeaderItem:
              parameters:
                id: '$response.body#/id'
              operationId: getHeaderItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /headers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Header-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Header:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Header-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Header-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Header-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Header-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Header-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Header-write'
        description: 'The new Header resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/headers/{id}':
    get:
      tags:
        - Header
      operationId: getHeaderItem
      summary: 'Retrieves a Header resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Header resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Header:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Header-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Header-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Header-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Header
      operationId: deleteHeaderItem
      summary: 'Removes the Header resource.'
      responses:
        204:
          description: 'Header resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Header
      operationId: putHeaderItem
      summary: 'Replaces the Header resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Header resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Header:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Header-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Header-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Header-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Header-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Header:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Header-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Header-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Header-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Header-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Header-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Header-write'
        description: 'The updated Header resource'
    patch:
      tags:
        - Header
      operationId: patchHeaderItem
      summary: 'Updates the Header resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Header resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Header:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Header-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Header-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Header-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Header-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Header-write'
        description: 'The updated Header resource'
  /images:
    get:
      tags:
        - Image
      operationId: getImageCollection
      summary: 'Retrieves the collection of Image resources.'
      responses:
        200:
          description: 'Image collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Image:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Image
      operationId: postImageCollection
      summary: 'Creates a Image resource.'
      responses:
        201:
          description: 'Image resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Image:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Image-read'
          links:
            GetImageItem:
              parameters:
                id: '$response.body#/id'
              operationId: getImageItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /images/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Image:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Image-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Image-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Image-write'
        description: 'The new Image resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/images/{id}':
    get:
      tags:
        - Image
      operationId: getImageItem
      summary: 'Retrieves a Image resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Image resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Image:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Image-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Image
      operationId: deleteImageItem
      summary: 'Removes the Image resource.'
      responses:
        204:
          description: 'Image resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Image
      operationId: putImageItem
      summary: 'Replaces the Image resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Image resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Image:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Image-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Image:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Image-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Image-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Image-write'
        description: 'The updated Image resource'
    patch:
      tags:
        - Image
      operationId: patchImageItem
      summary: 'Updates the Image resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Image resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Image:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Image-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Image-write'
        description: 'The updated Image resource'
  /menu_items:
    get:
      tags:
        - MenuItem
      operationId: getMenuItemCollection
      summary: 'Retrieves the collection of MenuItem resources.'
      responses:
        200:
          description: 'MenuItem collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/MenuItem:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - MenuItem
      operationId: postMenuItemCollection
      summary: 'Creates a MenuItem resource.'
      responses:
        201:
          description: 'MenuItem resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MenuItem:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
          links:
            GetMenuItemItem:
              parameters:
                id: '$response.body#/id'
              operationId: getMenuItemItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /menu_items/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MenuItem:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
        description: 'The new MenuItem resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/menu_items/{id}':
    get:
      tags:
        - MenuItem
      operationId: getMenuItemItem
      summary: 'Retrieves a MenuItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'MenuItem resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MenuItem:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - MenuItem
      operationId: deleteMenuItemItem
      summary: 'Removes the MenuItem resource.'
      responses:
        204:
          description: 'MenuItem resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - MenuItem
      operationId: putMenuItemItem
      summary: 'Replaces the MenuItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'MenuItem resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MenuItem:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MenuItem:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
        description: 'The updated MenuItem resource'
    patch:
      tags:
        - MenuItem
      operationId: patchMenuItemItem
      summary: 'Updates the MenuItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'MenuItem resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MenuItem:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
        description: 'The updated MenuItem resource'
  /menus:
    get:
      tags:
        - Menu
      operationId: getMenuCollection
      summary: 'Retrieves the collection of Menu resources.'
      responses:
        200:
          description: 'Menu collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Menu:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Menu
      operationId: postMenuCollection
      summary: 'Creates a Menu resource.'
      responses:
        201:
          description: 'Menu resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Menu:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Menu-read'
          links:
            GetMenuItem:
              parameters:
                id: '$response.body#/id'
              operationId: getMenuItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /menus/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Menu:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Menu-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Menu-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Menu-write'
        description: 'The new Menu resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/menus/{id}':
    get:
      tags:
        - Menu
      operationId: getMenuItem
      summary: 'Retrieves a Menu resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Menu resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Menu:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Menu-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Menu
      operationId: deleteMenuItem
      summary: 'Removes the Menu resource.'
      responses:
        204:
          description: 'Menu resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Menu
      operationId: putMenuItem
      summary: 'Replaces the Menu resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Menu resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Menu:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Menu-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Menu:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Menu-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Menu-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Menu-write'
        description: 'The updated Menu resource'
    patch:
      tags:
        - Menu
      operationId: patchMenuItem
      summary: 'Updates the Menu resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Menu resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Menu:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Menu-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Menu-write'
        description: 'The updated Menu resource'
  /organizations:
    get:
      tags:
        - Organization
      operationId: getOrganizationCollection
      summary: 'Retrieves the collection of Organization resources.'
      responses:
        200:
          description: 'Organization collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Organization
      operationId: postOrganizationCollection
      summary: 'Creates a Organization resource.'
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrganizationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The new Organization resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/organizations/{id}':
    get:
      tags:
        - Organization
      operationId: getOrganizationItem
      summary: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Organization resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Organization
      operationId: deleteOrganizationItem
      summary: 'Removes the Organization resource.'
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Organization
      operationId: putOrganizationItem
      summary: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The updated Organization resource'
    patch:
      tags:
        - Organization
      operationId: patchOrganizationItem
      summary: 'Updates the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The updated Organization resource'
  /pages:
    get:
      tags:
        - Page
      operationId: getPageCollection
      summary: 'Retrieves the collection of Page resources.'
      responses:
        200:
          description: 'Page collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Page:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Page
      operationId: postPageCollection
      summary: 'Creates a Page resource.'
      responses:
        201:
          description: 'Page resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Page:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Page-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Page-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Page-read'
          links:
            GetPageItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPageItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /pages/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Page-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Page:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Page-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Page-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Page-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Page-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Page-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Page-write'
        description: 'The new Page resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/pages/{id}':
    get:
      tags:
        - Page
      operationId: getPageItem
      summary: 'Retrieves a Page resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Page resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Page:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Page-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Page-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Page-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Page
      operationId: deletePageItem
      summary: 'Removes the Page resource.'
      responses:
        204:
          description: 'Page resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Page
      operationId: putPageItem
      summary: 'Replaces the Page resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Page resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Page:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Page-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Page-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Page-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Page-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Page:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Page-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Page-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Page-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Page-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Page-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Page-write'
        description: 'The updated Page resource'
    patch:
      tags:
        - Page
      operationId: patchPageItem
      summary: 'Updates the Page resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Page resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Page:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Page-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Page-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Page-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Page-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Page-write'
        description: 'The updated Page resource'
  /slugs:
    get:
      tags:
        - Slug
      operationId: getSlugCollection
      summary: 'Retrieves the collection of Slug resources.'
      responses:
        200:
          description: 'Slug collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Slug:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Slug
      operationId: postSlugCollection
      summary: 'Creates a Slug resource.'
      responses:
        201:
          description: 'Slug resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Slug-read'
          links:
            GetSlugItem:
              parameters:
                id: '$response.body#/id'
              operationId: getSlugItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /slugs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Slug:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Slug-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Slug-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Slug-write'
        description: 'The new Slug resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/slugs/{id}':
    get:
      tags:
        - Slug
      operationId: getSlugItem
      summary: 'Retrieves a Slug resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Slug resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Slug-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Slug
      operationId: deleteSlugItem
      summary: 'Removes the Slug resource.'
      responses:
        204:
          description: 'Slug resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Slug
      operationId: putSlugItem
      summary: 'Replaces the Slug resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Slug resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Slug-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Slug:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Slug-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Slug-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Slug-write'
        description: 'The updated Slug resource'
    patch:
      tags:
        - Slug
      operationId: patchSlugItem
      summary: 'Updates the Slug resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Slug resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Slug-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Slug-write'
        description: 'The updated Slug resource'
  /styles:
    get:
      tags:
        - Style
      operationId: getStyleCollection
      summary: 'Retrieves the collection of Style resources.'
      responses:
        200:
          description: 'Style collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Style:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Style
      operationId: postStyleCollection
      summary: 'Creates a Style resource.'
      responses:
        201:
          description: 'Style resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Style-read'
          links:
            GetStyleItem:
              parameters:
                id: '$response.body#/id'
              operationId: getStyleItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /styles/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Style:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Style-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Style-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Style-write'
        description: 'The new Style resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/styles/{id}':
    get:
      tags:
        - Style
      operationId: getStyleItem
      summary: 'Retrieves a Style resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Style resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Style-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Style
      operationId: deleteStyleItem
      summary: 'Removes the Style resource.'
      responses:
        204:
          description: 'Style resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Style
      operationId: putStyleItem
      summary: 'Replaces the Style resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Style resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Style-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Style:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Style-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Style-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Style-write'
        description: 'The updated Style resource'
    patch:
      tags:
        - Style
      operationId: patchStyleItem
      summary: 'Updates the Style resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Style resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Style-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Style-write'
        description: 'The updated Style resource'
  /templates:
    get:
      tags:
        - Template
      operationId: getTemplateCollection
      summary: 'Retrieves the collection of Template resources.'
      responses:
        200:
          description: 'Template collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Template:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Template
      operationId: postTemplateCollection
      summary: 'Creates a Template resource.'
      responses:
        201:
          description: 'Template resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Template-read'
          links:
            GetTemplateItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTemplateItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /templates/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Template:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Template-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Template-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Template-write'
        description: 'The new Template resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/templates/{id}':
    get:
      tags:
        - Template
      operationId: getTemplateItem
      summary: 'Retrieves a Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Template resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Template-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Template
      operationId: putTemplateItem
      summary: 'Replaces the Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Template resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Template-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Template:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Template-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Template-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Template-write'
        description: 'The updated Template resource'
    delete:
      tags:
        - Template
      operationId: deleteTemplateItem
      summary: 'Removes the Template resource.'
      responses:
        204:
          description: 'Template resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/templates/{id}/render':
    get:
      tags:
        - Template
      operationId: render_templateTemplateItem
      summary: 'Retrieves a Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Template resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Template-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
security:
  -
    apiKey: []
components:
  schemas:
    Application-read:
      type: object
      description: 'Application is the project of a website.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this application.'
          type: string
        description:
          description: 'The description of this application.'
          type: string
        domain:
          description: 'The domain of this application.'
          type: string
        header:
          $ref: '#/components/schemas/Header-read'
        footer:
          $ref: '#/components/schemas/Footer-read'
        organization:
          $ref: '#/components/schemas/Organization-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - description
        - domain
    Application-write:
      type: object
      description: 'Application is the project of a website.'
      required:
        - name
        - description
        - domain
      properties:
        name:
          description: 'The name of this application.'
          type: string
        description:
          description: 'The description of this application.'
          type: string
        domain:
          description: 'The domain of this application.'
          type: string
        header:
          $ref: '#/components/schemas/Header-write'
        footer:
          $ref: '#/components/schemas/Footer-write'
        organization:
          $ref: '#/components/schemas/Organization-write'
    'Application:jsonld-read':
      type: object
      description: 'Application is the project of a website.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this application.'
          type: string
        description:
          description: 'The description of this application.'
          type: string
        domain:
          description: 'The domain of this application.'
          type: string
        header:
          $ref: '#/components/schemas/Header:jsonld-read'
        footer:
          $ref: '#/components/schemas/Footer:jsonld-read'
        organization:
          $ref: '#/components/schemas/Organization:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - description
        - domain
    'Application:jsonld-write':
      type: object
      description: 'Application is the project of a website.'
      required:
        - name
        - description
        - domain
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this application.'
          type: string
        description:
          description: 'The description of this application.'
          type: string
        domain:
          description: 'The domain of this application.'
          type: string
        header:
          $ref: '#/components/schemas/Header:jsonld-write'
        footer:
          $ref: '#/components/schemas/Footer:jsonld-write'
        organization:
          $ref: '#/components/schemas/Organization:jsonld-write'
    Footer-read:
      type: object
      description: 'Footer can hold a logo and menu or other links.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        logo:
          $ref: '#/components/schemas/Image-read'
        application:
          $ref: '#/components/schemas/Application-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
    Footer-write:
      type: object
      description: 'Footer can hold a logo and menu or other links.'
      properties:
        logo:
          $ref: '#/components/schemas/Image-write'
        application:
          $ref: '#/components/schemas/Application-write'
    'Footer:jsonld-read':
      type: object
      description: 'Footer can hold a logo and menu or other links.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        logo:
          $ref: '#/components/schemas/Image:jsonld-read'
        application:
          $ref: '#/components/schemas/Application:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
    'Footer:jsonld-write':
      type: object
      description: 'Footer can hold a logo and menu or other links.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        logo:
          $ref: '#/components/schemas/Image:jsonld-write'
        application:
          $ref: '#/components/schemas/Application:jsonld-write'
    Header-read:
      type: object
      description: 'A header holds your logo and menu in your application.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          $ref: '#/components/schemas/Application-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
    Header-write:
      type: object
      description: 'A header holds your logo and menu in your application.'
      properties:
        application:
          $ref: '#/components/schemas/Application-write'
    'Header:jsonld-read':
      type: object
      description: 'A header holds your logo and menu in your application.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          $ref: '#/components/schemas/Application:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
    'Header:jsonld-write':
      type: object
      description: 'A header holds your logo and menu in your application.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        application:
          $ref: '#/components/schemas/Application:jsonld-write'
    Image-read:
      type: object
      description: 'Image speaks for itself.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this image'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
        alt:
          description: 'The alt of of this image for people with poor eyesight'
          type: string
        href:
          description: 'The href of this image'
          type: string
        base64:
          type: string
        organization:
          $ref: '#/components/schemas/Organization-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - description
    Image-write:
      type: object
      description: 'Image speaks for itself.'
      required:
        - name
        - description
      properties:
        name:
          description: 'The name of this image'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
        alt:
          description: 'The alt of of this image for people with poor eyesight'
          type: string
        href:
          description: 'The href of this image'
          type: string
        base64:
          type: string
        organization:
          $ref: '#/components/schemas/Organization-write'
    'Image:jsonld-read':
      type: object
      description: 'Image speaks for itself.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this image'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
        alt:
          description: 'The alt of of this image for people with poor eyesight'
          type: string
        href:
          description: 'The href of this image'
          type: string
        base64:
          type: string
        organization:
          $ref: '#/components/schemas/Organization:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - description
    'Image:jsonld-write':
      type: object
      description: 'Image speaks for itself.'
      required:
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this image'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
        alt:
          description: 'The alt of of this image for people with poor eyesight'
          type: string
        href:
          description: 'The href of this image'
          type: string
        base64:
          type: string
        organization:
          $ref: '#/components/schemas/Organization:jsonld-write'
    Menu-read:
      type: object
      description: 'Menu is your way of navigation inside your application.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        menuItem:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
    Menu-write:
      type: object
      description: 'Menu is your way of navigation inside your application.'
      required:
        - name
      properties:
        name:
          description: 'The name of this menu'
          type: string
        menuItem:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem-write'
    'Menu:jsonld-read':
      type: object
      description: 'Menu is your way of navigation inside your application.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        menuItem:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
    'Menu:jsonld-write':
      type: object
      description: 'Menu is your way of navigation inside your application.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this menu'
          type: string
        menuItem:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem:jsonld-write'
    MenuItem-read:
      type: object
      description: 'MenuItem is a part of a menu and can be a link or submenu.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this MenuItem'
          type: string
        description:
          description: 'The description of this MenuItem'
          type: string
        href:
          description: 'The href of this MenuItem that links to another page'
          type: string
        menu:
          $ref: '#/components/schemas/Menu-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - href
    MenuItem-write:
      type: object
      description: 'MenuItem is a part of a menu and can be a link or submenu.'
      required:
        - name
        - href
      properties:
        name:
          description: 'The name of this MenuItem'
          type: string
        description:
          description: 'The description of this MenuItem'
          type: string
        href:
          description: 'The href of this MenuItem that links to another page'
          type: string
        menu:
          $ref: '#/components/schemas/Menu-write'
    'MenuItem:jsonld-read':
      type: object
      description: 'MenuItem is a part of a menu and can be a link or submenu.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this MenuItem'
          type: string
        description:
          description: 'The description of this MenuItem'
          type: string
        href:
          description: 'The href of this MenuItem that links to another page'
          type: string
        menu:
          $ref: '#/components/schemas/Menu:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - href
    'MenuItem:jsonld-write':
      type: object
      description: 'MenuItem is a part of a menu and can be a link or submenu.'
      required:
        - name
        - href
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this MenuItem'
          type: string
        description:
          description: 'The description of this MenuItem'
          type: string
        href:
          description: 'The href of this MenuItem that links to another page'
          type: string
        menu:
          $ref: '#/components/schemas/Menu:jsonld-write'
    Organization-read:
      type: object
      description: 'An organization as active on commonground.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        rsin:
          description: 'The rsin of this organisations.'
          type: string
        name:
          description: 'The name of this organization.'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
        logo:
          $ref: '#/components/schemas/Image-read'
        styles:
          type: array
          items:
            $ref: '#/components/schemas/Style-read'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application-read'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - rsin
        - name
        - description
    Organization-write:
      type: object
      description: 'An organization as active on commonground.'
      required:
        - rsin
        - name
        - description
      properties:
        rsin:
          description: 'The rsin of this organisations.'
          type: string
        name:
          description: 'The name of this organization.'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
        logo:
          $ref: '#/components/schemas/Image-write'
        styles:
          type: array
          items:
            $ref: '#/components/schemas/Style-write'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application-write'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image-write'
    'Organization:jsonld-read':
      type: object
      description: 'An organization as active on commonground.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        rsin:
          description: 'The rsin of this organisations.'
          type: string
        name:
          description: 'The name of this organization.'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
        logo:
          $ref: '#/components/schemas/Image:jsonld-read'
        styles:
          type: array
          items:
            $ref: '#/components/schemas/Style:jsonld-read'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application:jsonld-read'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - rsin
        - name
        - description
    'Organization:jsonld-write':
      type: object
      description: 'An organization as active on commonground.'
      required:
        - rsin
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        rsin:
          description: 'The rsin of this organisations.'
          type: string
        name:
          description: 'The name of this organization.'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
        logo:
          $ref: '#/components/schemas/Image:jsonld-write'
        styles:
          type: array
          items:
            $ref: '#/components/schemas/Style:jsonld-write'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application:jsonld-write'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image:jsonld-write'
    Page-read:
      type: object
      description: 'A page holds your content in your application.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        title:
          description: 'The title of this page.'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        template:
          $ref: '#/components/schemas/Template-read'
        application:
          $ref: '#/components/schemas/Application-read'
        slug:
          $ref: '#/components/schemas/Slug-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - title
        - description
    Page-write:
      type: object
      description: 'A page holds your content in your application.'
      required:
        - title
        - description
      properties:
        title:
          description: 'The title of this page.'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        template:
          $ref: '#/components/schemas/Template-write'
        application:
          $ref: '#/components/schemas/Application-write'
        slug:
          $ref: '#/components/schemas/Slug-write'
    'Page:jsonld-read':
      type: object
      description: 'A page holds your content in your application.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        title:
          description: 'The title of this page.'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        template:
          $ref: '#/components/schemas/Template:jsonld-read'
        application:
          $ref: '#/components/schemas/Application:jsonld-read'
        slug:
          $ref: '#/components/schemas/Slug:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - title
        - description
    'Page:jsonld-write':
      type: object
      description: 'A page holds your content in your application.'
      required:
        - title
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        title:
          description: 'The title of this page.'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        template:
          $ref: '#/components/schemas/Template:jsonld-write'
        application:
          $ref: '#/components/schemas/Application:jsonld-write'
        slug:
          $ref: '#/components/schemas/Slug:jsonld-write'
    Slug-read:
      type: object
      description: 'Your slug connects your application with your pages.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          $ref: '#/components/schemas/Application-read'
        page:
          $ref: '#/components/schemas/Page-read'
        slug:
          description: 'The actual slug of this slug.'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - slug
    Slug-write:
      type: object
      description: 'Your slug connects your application with your pages.'
      properties:
        application:
          $ref: '#/components/schemas/Application-write'
        page:
          $ref: '#/components/schemas/Page-write'
        slug:
          description: 'The actual slug of this slug.'
          type: string
      required:
        - slug
    'Slug:jsonld-read':
      type: object
      description: 'Your slug connects your application with your pages.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          $ref: '#/components/schemas/Application:jsonld-read'
        page:
          $ref: '#/components/schemas/Page:jsonld-read'
        slug:
          description: 'The actual slug of this slug.'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - slug
    'Slug:jsonld-write':
      type: object
      description: 'Your slug connects your application with your pages.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        application:
          $ref: '#/components/schemas/Application:jsonld-write'
        page:
          $ref: '#/components/schemas/Page:jsonld-write'
        slug:
          description: 'The actual slug of this slug.'
          type: string
      required:
        - slug
    Style-read:
      type: object
      description: 'Your style provides ccs and a favicon for an organisation.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this style.'
          type: string
        description:
          description: 'The description of this style.'
          type: string
        css:
          type: string
        favicon:
          $ref: '#/components/schemas/Image-read'
        organization:
          $ref: '#/components/schemas/Organization-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - description
    Style-write:
      type: object
      description: 'Your style provides ccs and a favicon for an organisation.'
      required:
        - name
        - description
      properties:
        name:
          description: 'The name of this style.'
          type: string
        description:
          description: 'The description of this style.'
          type: string
        css:
          type: string
        favicon:
          $ref: '#/components/schemas/Image-write'
        organization:
          $ref: '#/components/schemas/Organization-write'
    'Style:jsonld-read':
      type: object
      description: 'Your style provides ccs and a favicon for an organisation.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this style.'
          type: string
        description:
          description: 'The description of this style.'
          type: string
        css:
          type: string
        favicon:
          $ref: '#/components/schemas/Image:jsonld-read'
        organization:
          $ref: '#/components/schemas/Organization:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - description
    'Style:jsonld-write':
      type: object
      description: 'Your style provides ccs and a favicon for an organisation.'
      required:
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this style.'
          type: string
        description:
          description: 'The description of this style.'
          type: string
        css:
          type: string
        favicon:
          $ref: '#/components/schemas/Image:jsonld-write'
        organization:
          $ref: '#/components/schemas/Organization:jsonld-write'
    Template-read:
      type: object
      description: 'Content holds information and photos you want to show on your pages.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        content:
          description: 'The Content of this template.'
          type: string
        templateEngine:
          description: 'The template engine used to render this template. Schould be either twig (Twig), md (markdown) or rst (reStructuredText)'
          type: string
        pages:
          type: array
          items:
            $ref: '#/components/schemas/Page-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - description
        - content
        - templateEngine
    Template-write:
      type: object
      description: 'Content holds information and photos you want to show on your pages.'
      required:
        - name
        - description
        - content
        - templateEngine
      properties:
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        content:
          description: 'The Content of this template.'
          type: string
        templateEngine:
          description: 'The template engine used to render this template. Schould be either twig (Twig), md (markdown) or rst (reStructuredText)'
          type: string
        pages:
          type: array
          items:
            $ref: '#/components/schemas/Page-write'
    'Template:jsonld-read':
      type: object
      description: 'Content holds information and photos you want to show on your pages.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        content:
          description: 'The Content of this template.'
          type: string
        templateEngine:
          description: 'The template engine used to render this template. Schould be either twig (Twig), md (markdown) or rst (reStructuredText)'
          type: string
        pages:
          type: array
          items:
            $ref: '#/components/schemas/Page:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - description
        - content
        - templateEngine
    'Template:jsonld-write':
      type: object
      description: 'Content holds information and photos you want to show on your pages.'
      required:
        - name
        - description
        - content
        - templateEngine
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        content:
          description: 'The Content of this template.'
          type: string
        templateEngine:
          description: 'The template engine used to render this template. Schould be either twig (Twig), md (markdown) or rst (reStructuredText)'
          type: string
        pages:
          type: array
          items:
            $ref: '#/components/schemas/Page:jsonld-write'
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      description: 'Value for the Authorization header'
      name: Authorization
definitions:
  Application-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this application.'
        type: string
        example: Webshop
        maxLength: 255
      description:
        description: 'The description of this application.'
        type: string
        example: 'Is the best site ever'
        maxLength: 255
      domain:
        description: 'The domain of this application.'
        type: string
        example: 'https://www.example.org'
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      header: []
      footer: []
      organization: []
    required:
      - name
      - description
      - domain
  Application-write:
    properties:
      name:
        description: 'The name of this application.'
        type: string
        example: Webshop
        maxLength: 255
      description:
        description: 'The description of this application.'
        type: string
        example: 'Is the best site ever'
        maxLength: 255
      domain:
        description: 'The domain of this application.'
        type: string
        example: 'https://www.example.org'
        maxLength: 255
      header: []
      footer: []
      organization: []
    required:
      - name
      - description
      - domain
  Footer-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      logo: []
      application: []
    required: []
  Footer-write:
    properties:
      logo: []
      application: []
    required: []
  Header-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      application: []
    required: []
  Header-write:
    properties:
      application: []
    required: []
  Image-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this image'
        type: string
        example: Flowers
        maxLength: 255
      description:
        description: 'The description of this organisation.'
        type: string
        example: 'This is the manucipality of Utrecht'
        maxLength: 255
      alt:
        description: 'The alt of of this image for people with poor eyesight'
        type: string
        example: flowers
        maxLength: 255
      href:
        description: 'The href of this image'
        type: string
        example: app_img_flowers
        maxLength: 255
      base64: []
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      organization: []
    required:
      - name
      - description
  Image-write:
    properties:
      name:
        description: 'The name of this image'
        type: string
        example: Flowers
        maxLength: 255
      description:
        description: 'The description of this organisation.'
        type: string
        example: 'This is the manucipality of Utrecht'
        maxLength: 255
      alt:
        description: 'The alt of of this image for people with poor eyesight'
        type: string
        example: flowers
        maxLength: 255
      href:
        description: 'The href of this image'
        type: string
        example: app_img_flowers
        maxLength: 255
      base64: []
      organization: []
    required:
      - name
      - description
  Menu-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      menuItem: []
    required:
      - name
  Menu-write:
    properties:
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      menuItem: []
    required:
      - name
  MenuItem-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this MenuItem'
        type: string
        example: about-menu-link
        maxLength: 255
      description:
        description: 'The description of this MenuItem'
        type: string
        example: 'This MenuItem links to the about page'
        maxLength: 2555
      href:
        description: 'The href of this MenuItem that links to another page'
        type: string
        example: app_home_about
        maxLength: 2555
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      menu: []
    required:
      - name
      - href
  MenuItem-write:
    properties:
      name:
        description: 'The name of this MenuItem'
        type: string
        example: about-menu-link
        maxLength: 255
      description:
        description: 'The description of this MenuItem'
        type: string
        example: 'This MenuItem links to the about page'
        maxLength: 2555
      href:
        description: 'The href of this MenuItem that links to another page'
        type: string
        example: app_home_about
        maxLength: 2555
      menu: []
    required:
      - name
      - href
  Organization-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      rsin:
        description: 'The rsin of this organisations.'
        type: string
        example: About
        maxLength: 255
      name:
        description: 'The name of this organization.'
        type: string
        example: About
        maxLength: 255
      description:
        description: 'The description of this organisation.'
        type: string
        example: 'This is the manucipality of Utrecht'
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      logo: []
      styles: []
      applications: []
      images: []
    required:
      - rsin
      - name
      - description
  Organization-write:
    properties:
      rsin:
        description: 'The rsin of this organisations.'
        type: string
        example: About
        maxLength: 255
      name:
        description: 'The name of this organization.'
        type: string
        example: About
        maxLength: 255
      description:
        description: 'The description of this organisation.'
        type: string
        example: 'This is the manucipality of Utrecht'
        maxLength: 255
      logo: []
      styles: []
      applications: []
      images: []
    required:
      - rsin
      - name
      - description
  Page-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      title:
        description: 'The title of this page.'
        type: string
        example: About
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      template: []
      application: []
      slug: []
    required:
      - title
      - description
  Page-write:
    properties:
      title:
        description: 'The title of this page.'
        type: string
        example: About
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      template: []
      application: []
      slug: []
    required:
      - title
      - description
  Slug-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      slug:
        description: 'The actual slug of this slug.'
        type: string
        example: /about
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      application: []
      page: []
    required:
      - slug
  Slug-write:
    properties:
      slug:
        description: 'The actual slug of this slug.'
        type: string
        example: /about
        maxLength: 255
      application: []
      page: []
    required:
      - slug
  Style-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this style.'
        type: string
        example: About
        maxLength: 255
      description:
        description: 'The description of this style.'
        type: string
        example: 'This page holds info about this style'
        maxLength: 255
      css: []
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      favicon: []
      organization: []
    required:
      - name
      - description
  Style-write:
    properties:
      name:
        description: 'The name of this style.'
        type: string
        example: About
        maxLength: 255
      description:
        description: 'The description of this style.'
        type: string
        example: 'This page holds info about this style'
        maxLength: 255
      css: []
      favicon: []
      organization: []
    required:
      - name
      - description
  Template-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      content:
        description: 'The Content of this template.'
        type: string
        example: 'A lot of random info over any topic'
      templateEngine:
        description: 'The template engine used to render this template. Schould be either twig (Twig), md (markdown) or rst (reStructuredText)'
        type: string
        example: Twig
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      pages: []
    required:
      - name
      - description
      - content
      - templateEngine
  Template-write:
    properties:
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      content:
        description: 'The Content of this template.'
        type: string
        example: 'A lot of random info over any topic'
      templateEngine:
        description: 'The template engine used to render this template. Schould be either twig (Twig), md (markdown) or rst (reStructuredText)'
        type: string
        example: Twig
      pages: []
    required:
      - name
      - description
      - content
      - templateEngine
tags:
  -
    name: Application
    description: |
      Application is the project of a website.
      
      
  -
    name: Footer
    description: |
      Footer can hold a logo and menu or other links.
      
      
  -
    name: Header
    description: |
      A header holds your logo and menu in your application.
      
      
  -
    name: Image
    description: |
      Image speaks for itself.
      
      
  -
    name: Menu
    description: |
      Menu is your way of navigation inside your application.
      
      
  -
    name: MenuItem
    description: |
      MenuItem is a part of a menu and can be a link or submenu.
      
      
  -
    name: Organization
    description: |
      An organization as active on commonground.
      
      
  -
    name: Page
    description: |
      A page holds your content in your application.
      
      
  -
    name: Slug
    description: |
      Your slug connects your application with your pages.
      
      
  -
    name: Style
    description: |
      Your style provides ccs and a favicon for an organisation.
      
      
  -
    name: Template
    description: |
      Content holds information and photos you want to show on your pages.
      
      
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the Template resource'
      write: 'write right to the Template resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the Template resource'
      write: 'write right to the Template resource'
host: irc.zaakonline.nl
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://proto.demo.common-ground.dev'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
